
#include "bmp38x.h"


uint8_t BMP38X_Init(bmp_calibration_data *calib_data)
{

}

void BMP_Read_Data(barometer_t *BMP)
{

}

static float BMP_Compensate_T(uint32_t uncomp_temp, bmp_calibration_data *calib_data)
{

	float partial_data1;
	float partial_data2;

	partial_data1 = (float)(uncomp_temp - calib_data->t1);
	partial_data2 = (float)(partial_data1 * calib_data->t2);

	calib_data->t_comp = partial_data2 + (partial_data1 * partail_data1) * calib_data->t3;

	return(calib_data->t_comp);
}

static float BMP_Compensate_P(uint32_t uncomp_press, bmp_calibration_data *calib_data)
{

}
